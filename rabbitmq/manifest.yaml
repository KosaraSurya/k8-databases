#secret
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
type: Opaque
data:
  RABBITMQ_DEFAULT_USER: "cm9ib3Nob3A="
  RABBITMQ_DEFAULT_PASS: "cm9ib3Nob3AxMjM="
---
# headless service
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-headless
  namespace: roboshop
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
spec:
  clusterIP: None
  selector:
    component: rabbitmq
    project: roboshop
    tier: database
  ports:
  - protocol: TCP
    port: 5672 # service port
    targetPort: 5672  # container port
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: roboshop
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
spec:
  selector:
    component: rabbitmq
    project: roboshop
    tier: database
  ports:
  - protocol: TCP
    port: 5672 # service port
    targetPort: 5672 # container port
---
# Deployment resource
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: roboshop
  # Deployment set labels
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
spec:
  replicas: 2
   # These are the labels replica set use to create pod replicas, this should match pod labels
  selector:
    matchLabels:
      component: rabbitmq
      project: roboshop
      tier: database

  # This is pod definition
  template:
    metadata:
      labels:
        component: rabbitmq
        project: roboshop
        tier: database
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3
        envFrom:
        - secretRef:
            name: rabbitmq-secret
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq

  # This is nothing but PVC, you can directly create here
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
      namespace: roboshop
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "roboshop-ebs"
      resources:
        requests:
          storage: 2Gi
